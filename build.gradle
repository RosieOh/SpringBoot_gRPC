plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.protobuf' version '0.8.18' // 최신 버전으로 수정
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    gradlePluginPortal()
    mavenCentral()
    google() // 중요: protobuf 플러그인이 여기서 필요함
}

dependencies {
    // Spring WebFlux (Netty 포함)
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.6.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // DevTools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Database
    implementation "org.springframework.boot:spring-boot-starter-data-r2dbc"
    implementation "io.r2dbc:r2dbc-h2"
    runtimeOnly "com.h2database:h2"

    implementation "com.fasterxml.jackson.core:jackson-databind"

    // gRPC 관련 의존성
    implementation 'io.grpc:grpc-netty-shaded:1.57.0'
    implementation 'io.grpc:grpc-protobuf:1.57.0'
    implementation 'io.grpc:grpc-stub:1.57.0'
    implementation 'com.google.protobuf:protobuf-java:3.24.4'
    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.24.4" // Protobuf 컴파일러 버전
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.57.0'
        }
    }
    generateProtoTasks {
        all().forEach { task ->
            task.builtins {
                java {}
            }
            task.plugins {
                grpc {}
            }
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
